{
  "openapi": "3.0.4",
  "info": {
    "title": "Advanta Mobile API 2.0",
    "description": "Mobile API used in ActiveFit. <br/>Environment Setting: Test <br/>Environment Variable: Development <br/>Platform Variable: Bismuth <br/>Is Production: False<br/>Host: AHS-SVC-02<br/>IPv4 IPs: 208.44.83.7<br/>Version 1.4.52.0<br/>Build Date 7/8/2025 1:34:49 PM<br/>Environment Microsoft Windows NT 10.0.20348.0<br/>FrameworkDescription .NET 9.0.5",
    "contact": {
      "name": "Frank Alvarez",
      "email": "falvarez@advantaheaalth.com"
    },
    "version": "2.0"
  },
  "paths": {
    "/api/v2/ApplicationSettings/access": {
      "get": {
        "tags": [
          "Application Settings"
        ],
        "summary": "Get access information for the authenticated member",
        "description": "Checks if the authenticated member has access to use the mobile application by validating against blocked\r\nactions. Returns access status and a URL for any splash messages.",
        "responses": {
          "500": {
            "description": "Internal server error while checking member mobile application access",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved access information including whether the member can use the mobile app",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Controllers.ApplicationSettingsController.AccessResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/ApplicationSettings/activeFit": {
      "get": {
        "tags": [
          "Application Settings"
        ],
        "summary": "Get custom ActiveFit settings JSON data",
        "description": "Retrieves the current ActiveFit settings document as a dynamic JSON object. This endpoint is publicly\r\naccessible and does not require authentication.",
        "responses": {
          "500": {
            "description": "Internal server error while retrieving settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved ActiveFit settings JSON data",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Application Settings"
        ],
        "summary": "Update custom ActiveFit settings JSON data",
        "description": "Updates the ActiveFit settings document with the provided JSON data. Requires API user policy authorization.\r\nThe settings are serialized and persisted to the configuration system.",
        "requestBody": {
          "description": "Dynamic JSON object containing the new ActiveFit settings to save",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error while saving settings",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully updated ActiveFit settings",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid JSON data in request body",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions (requires API user policy)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/Authentication/Token": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate the JWT Token using OAuth2.0 Password and Refresh Grant flows",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.AspNetCore.ApiSecurity.Models.SignInAccount"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.AspNetCore.ApiSecurity.Models.SignInAccount"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.AspNetCore.ApiSecurity.Models.SignInAccount"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.AspNetCore.ApiSecurity.Models.SignInAccount"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Get the ID Token, Refresh Token and timeout value",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.ApiSecurity.Models.TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Authentication/GrabToken": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Generate JWT Token using form-encoded credentials",
        "description": "Alternative endpoint for token generation that accepts form-encoded data instead of JSON",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "description": "The OAuth2 grant type (typically \"password\")"
                  },
                  "scope": {
                    "type": "string",
                    "description": "The requested scope for the token"
                  },
                  "username": {
                    "type": "string",
                    "description": "The user's username or email"
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password"
                  }
                }
              },
              "encoding": {
                "grant_type": {
                  "style": "form"
                },
                "scope": {
                  "style": "form"
                },
                "username": {
                  "style": "form"
                },
                "password": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully generated tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.ApiSecurity.Models.TokenResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid credentials or malformed request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error during token generation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Authentication/token/{token}/refresh": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Refreshes the ID Token",
        "description": "Used when the ID token has expired.  Will get a new ID Token and same refresh Token with the user's claims",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "The Refresh Token is expired or revoked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "500": {
            "description": "The Refresh Token format is incorrect",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.ApiSecurity.Models.TokenResponse"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Authentication/token/{token}/revoke": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Revokes the current Refresh Token",
        "description": "Used when signing out since Refresh Token will live for long time",
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "description": "",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "The Refresh Token was not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "400": {
            "description": "The Refresh Token has already been revoked.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "204": {
            "description": "The Refresh Token was successfully revoked."
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Banner": {
      "get": {
        "tags": [
          "User Interface"
        ],
        "summary": "Retrieves personalized banner data for the authenticated member.",
        "description": "This method uses the authenticated member's ID to filter and personalize banner content.\r\nThe banner data is returned with camelCase property names and null values are ignored.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting the banner schema data."
          },
          "200": {
            "description": "Returns the banner data for the authenticated member."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Banner/schema": {
      "post": {
        "tags": [
          "User Interface"
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.UI.BannerModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.UI.BannerModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.UI.BannerModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.UI.BannerModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/BlockedActions": {
      "get": {
        "tags": [
          "BlockedActions"
        ],
        "summary": "Retrieves the enabled action details for the authenticated member.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error retrieving the blocked actions data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the enabled action details for the member."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/BlockedActions/RequiresConsent": {
      "get": {
        "tags": [
          "BlockedActions"
        ],
        "summary": "Checks if the authenticated member requires consent for certain actions.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error retrieving the consent requirement data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns true if the member requires consent, false otherwise.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/BlockedActions/hasReinstatementConsent": {
      "get": {
        "tags": [
          "BlockedActions"
        ],
        "summary": "Checks if the authenticated member requires reinstatement consent.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error retrieving the reinstatement consent requirement data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns true if the member requires reinstatement consent, false otherwise.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/BlockedActions/AcceptMemberConsent": {
      "post": {
        "tags": [
          "BlockedActions"
        ],
        "summary": "Processes the member's consent decision for pending agreements.",
        "requestBody": {
          "description": "True if the member has consented to the agreement, false if declined.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "text/json": {
              "schema": {
                "type": "boolean"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "boolean"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error processing the consent.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the result of processing the consent decision."
          },
          "400": {
            "description": "If the request body is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Cache/Clear": {
      "put": {
        "tags": [
          "Cache Utilities"
        ],
        "parameters": [
          {
            "name": "key",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "clearAllNodes",
            "in": "query",
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "ApiKey": [ ]
          },
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/CheckIn": {
      "post": {
        "tags": [
          "Check In and Check Out"
        ],
        "summary": "Initiates a check-in to a club based on proximity to verified whitelisted clubs",
        "description": "Creates a new check-in session when the member is within proximity of a verified club. The system validates\r\nthe member's location against whitelisted clubs before creating the session.",
        "requestBody": {
          "description": "The check-in request containing device information, timestamp, and geolocation coordinates",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckinEventVisit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckinEventVisit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckinEventVisit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckinEventVisit"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error during check-in process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully created check-in session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.CheckIn.CheckinEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "No session was created during check-in - member may not be within proximity of a verified club",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/CheckIn/SessionState": {
      "get": {
        "tags": [
          "Check In and Check Out"
        ],
        "summary": "Gets the status of all open check-in sessions",
        "description": "Retrieves any active check-in sessions for the specified device and authenticated member. Returns session\r\ndetails including club information and check-in time.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "query",
            "description": "The device ID associated with the member to retrieve open sessions for",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved open session information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.CheckIn.OpenSessionResponse"
                }
              }
            }
          },
          "204": {
            "description": "No valid club found or no open sessions for this member/device combination"
          },
          "400": {
            "description": "Invalid device ID or request parameters",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/CheckIn/Checkout": {
      "post": {
        "tags": [
          "Check In and Check Out"
        ],
        "summary": "Performs a check-out from the club and finalizes the session",
        "description": "Completes an active check-in session by recording the check-out time, calculating dwell time, and performing\r\nfinal validation/verification of attendance.",
        "requestBody": {
          "description": "The check-out request containing tracking ID, timestamp, and geolocation coordinates",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckOutEventVisit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckOutEventVisit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckOutEventVisit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.CheckOutEventVisit"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error during check-out process",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully checked out and session finalized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.CheckIn.CheckedOutSessionResponse"
                }
              }
            }
          },
          "400": {
            "description": "No active session found for the provided tracking ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/ClaimsTest/GetMemberIdClaim": {
      "get": {
        "tags": [
          "ClaimsTest"
        ],
        "summary": "Outputs the current Identity Claims associated with the current Token",
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/ClaimsTest/GetCurrentClaims": {
      "get": {
        "tags": [
          "ClaimsTest"
        ],
        "summary": "Outputs the Claims associated with the current Token",
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/ClaimsTest/tenants": {
      "get": {
        "tags": [
          "ClaimsTest"
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/ClaimsTest/tenants2": {
      "get": {
        "tags": [
          "ClaimsTest"
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "default": {
            "description": "Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Clubs/ProximiMetadata/{clubId}": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Gets the Proximi metadata for a specific club",
        "description": "Retrieves proximity-based metadata for a specific club, used for location-based services and check-in\r\nfunctionality. Requires API user policy authorization.",
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "description": "The unique identifier of the club to retrieve metadata for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved list of Proximi metadata for the club",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdvantaConnect.Clubs.Data.Models.ProximiMetadata"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid club ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions (requires API user policy)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Club not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/Clubs/ProximiMetadata": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Gets the Proximi metadata for all clubs",
        "description": "Retrieves proximity-based metadata for all clubs in the system. This endpoint uses a client-level policy and\r\nshould not be called by mobile applications directly.",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved list of Proximi metadata for all clubs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdvantaConnect.Clubs.Data.Models.ProximiMetadata"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions (requires API user policy)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/Clubs/GetAllActiveClubs": {
      "get": {
        "tags": [
          "Clubs"
        ],
        "summary": "Gets all active clubs in the Advanta Connect system",
        "description": "Retrieves comprehensive information about all active clubs in the system, including location data and beacon\r\ninformation for proximity services. This endpoint uses a client-level policy and should not be called by mobile\r\napplications directly.",
        "responses": {
          "500": {
            "description": "Internal server error or external API communication failure",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved list of all active clubs",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.ClubLocationModel"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions (requires API user policy)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/Diagnostics": {
      "get": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Get all diagnostic data previously submitted for the member",
        "description": "Retrieves all diagnostic data that has been previously submitted by the authenticated member. This includes\r\ntroubleshooting information, error reports, and other diagnostic details.",
        "responses": {
          "500": {
            "description": "Internal server error while retrieving diagnostic data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved the list of diagnostic data for the member",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.MobileAPI.DiagnosticsData"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Diagnostics"
        ],
        "summary": "Add new diagnostic record for the member",
        "description": "Creates a new diagnostic record for the authenticated member with the provided diagnostic data. The data is\r\nstored as JSON and can contain any relevant troubleshooting information, error details, or diagnostic metadata.",
        "requestBody": {
          "description": "The diagnostic details as a dynamic JSON structure containing troubleshooting information",
          "content": {
            "application/json-patch+json": {
              "schema": { }
            },
            "application/json": {
              "schema": { }
            },
            "text/json": {
              "schema": { }
            },
            "application/*+json": {
              "schema": { }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error while saving diagnostic data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully added the diagnostic data and returns the new record",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.MobileAPI.DiagnosticsData"
                }
              }
            }
          },
          "400": {
            "description": "Bad request or invalid diagnostic data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Firebase/token": {
      "get": {
        "tags": [
          "Firebase"
        ],
        "summary": "Retrieves the member's most recent associated Firebase notification token.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem retrieving the Firebase notification token data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the most recent Firebase notification token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.MobileAPI.FireBaseToken"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Firebase"
        ],
        "summary": "Adds a Firebase notification token for the authenticated member.",
        "description": "This endpoint is obsolete. Please use the PUT endpoint instead.",
        "requestBody": {
          "description": "The Firebase token to associate with the member. Takes an optional field for expiration. Uses\r\ndefault if left blank.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server error saving token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "The token was added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.MobileAPI.FireBaseToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid model state.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "409": {
            "description": "The token already exists. Nothing was done.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "Firebase"
        ],
        "summary": "Adds a new Firebase token or updates an existing one based on MemberId/DeviceId combination.",
        "requestBody": {
          "description": "The Firebase token to associate with the member. Will update the token if a match with\r\nMemberId/DeviceId was found.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.AddToken"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "Server error saving or updating token.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "The token was added or updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.MobileAPI.FireBaseToken"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid model state.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Firebase/tokens": {
      "get": {
        "tags": [
          "Firebase"
        ],
        "summary": "Retrieves all Firebase notification tokens associated with the authenticated member.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns all Firebase notification tokens for the member.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.MobileAPI.FireBaseToken"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Firebase/{deviceId}": {
      "delete": {
        "tags": [
          "Firebase"
        ],
        "summary": "Revokes a Firebase token by device ID for the authenticated member.",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID of the Firebase token to revoke.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns true if the token was successfully revoked, false otherwise.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/FitAtHome/GetHomeActivity/{verificationStatus}": {
      "get": {
        "tags": [
          "FitAtHome"
        ],
        "summary": "Retrieves all home activity data filtered by verification status.",
        "parameters": [
          {
            "name": "verificationStatus",
            "in": "path",
            "description": "The verification status to filter by.<br>1 = AwaitingVerification<br>2 = VerificationRejected<br>3 = VerificationAccepted<br>4 = VerificationNotRequired",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Advanta.Enums.VisitVerificationStatuses"
            },
            "x-enumNames": [
              "AwaitingVerification",
              "VerificationRejected",
              "VerificationAccepted",
              "VerificationNotRequired"
            ]
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting home activity data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns all home activity data for the specified verification status."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/FitAtHome/GetHomeActivity/{startDate}/{endDate}/{verificationStatus}": {
      "get": {
        "tags": [
          "FitAtHome"
        ],
        "summary": "Retrieves home activity data for a specific date range filtered by verification status.",
        "parameters": [
          {
            "name": "startDate",
            "in": "path",
            "description": "The start date for the range query.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "path",
            "description": "The end date for the range query.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "verificationStatus",
            "in": "path",
            "description": "The verification status to filter by.<br>1 = AwaitingVerification<br>2 = VerificationRejected<br>3 = VerificationAccepted<br>4 = VerificationNotRequired",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Advanta.Enums.VisitVerificationStatuses"
            },
            "x-enumNames": [
              "AwaitingVerification",
              "VerificationRejected",
              "VerificationAccepted",
              "VerificationNotRequired"
            ]
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting home activity data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns home activity data for the specified date range and verification status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.HomeActivities.HomeActivityDataModel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/FitAtHome/MediaUpload": {
      "post": {
        "tags": [
          "FitAtHome"
        ],
        "summary": "Uploads media content for a fit-at-home activity and creates an associated home activity report.",
        "description": "This endpoint accepts multipart/form-data for file uploads. The request should include:\r\n- Media file (image/video)\r\n- Timestamp of the activity\r\n- Time zone offset\r\n- GPS coordinates (optional)",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "Media",
                  "TimeStamp",
                  "TimeZoneOffset"
                ],
                "type": "object",
                "properties": {
                  "Media": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Coordinates.lat": {
                    "type": "number",
                    "format": "double"
                  },
                  "Coordinates.lng": {
                    "type": "number",
                    "format": "double"
                  },
                  "TimeStamp": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "TimeZoneOffset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Media": {
                  "style": "form"
                },
                "Coordinates.lat": {
                  "style": "form"
                },
                "Coordinates.lng": {
                  "style": "form"
                },
                "TimeStamp": {
                  "style": "form"
                },
                "TimeZoneOffset": {
                  "style": "form"
                }
              }
            },
            "application/octet-stream": {
              "schema": {
                "required": [
                  "Media",
                  "TimeStamp",
                  "TimeZoneOffset"
                ],
                "type": "object",
                "properties": {
                  "Media": {
                    "type": "string",
                    "format": "binary"
                  },
                  "Coordinates.lat": {
                    "type": "number",
                    "format": "double"
                  },
                  "Coordinates.lng": {
                    "type": "number",
                    "format": "double"
                  },
                  "TimeStamp": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "TimeZoneOffset": {
                    "type": "string"
                  }
                }
              },
              "encoding": {
                "Media": {
                  "style": "form"
                },
                "Coordinates.lat": {
                  "style": "form"
                },
                "Coordinates.lng": {
                  "style": "form"
                },
                "TimeStamp": {
                  "style": "form"
                },
                "TimeZoneOffset": {
                  "style": "form"
                }
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error during processing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the home activity response after successful upload and processing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.HomeActivityResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the request model is invalid or missing required data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/FitAtHome/{activityDate}": {
      "delete": {
        "tags": [
          "FitAtHome"
        ],
        "summary": "Deletes a fit-at-home entry using request body data.",
        "description": "The ActiveDate does not need time value, just needs to parse as DateTime.",
        "parameters": [
          {
            "name": "activityDate",
            "in": "path",
            "description": "The delete request containing the home activity date.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the home activity was removed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the request model is invalid or the home activity could not be removed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Map/ByViewPort/{upperLeft}/{lowerRight}": {
      "get": {
        "tags": [
          "Map"
        ],
        "summary": "Retrieves map markers for clubs within a rectangular viewport defined by two coordinate points.",
        "description": "The clubVerificationType can be either \"Verified\", \"Blacklisted\" or null if it's not in the member's verified clubs\r\nlist.\r\nA sample call will look like this:\r\n/api/v2/map/ByViewPort/40.91984734948095,-74.39427549211405/40.79000819618978,-73.92453486291788",
        "parameters": [
          {
            "name": "upperLeft",
            "in": "path",
            "description": "The northwest point expressed as \"Latitude,Longitude\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lowerRight",
            "in": "path",
            "description": "The southeast point expressed as \"Latitude,Longitude\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns a list of map marker metadata for clubs in the viewport.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MapMarker"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was a problem with the coordinate data format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Map/ByRadius/{position}": {
      "get": {
        "tags": [
          "Map"
        ],
        "summary": "Retrieves map markers for clubs within a specified radius from a center point.",
        "description": "The clubVerificationType can be either \"Verified\", \"Blacklisted\" or null if it's not in the member's verified clubs\r\nlist.\r\nA sample call will look like this: /api/v2/map/ByRadius/40.4242897,-74.24635769999998?radius=5",
        "parameters": [
          {
            "name": "position",
            "in": "path",
            "description": "The center point expressed as \"Latitude,Longitude\".",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "radius",
            "in": "query",
            "description": "The search radius in miles. Defaults to 5 miles.",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 5
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns a list of map marker metadata for clubs within the radius.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MapMarker"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If there was a problem with the coordinate data format.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ValidationProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/MemberVisit": {
      "get": {
        "tags": [
          "MemberVisit"
        ],
        "summary": "Retrieves visit usage information for the authenticated member.",
        "parameters": [
          {
            "name": "PeriodType",
            "in": "query",
            "description": "<br>0 = all<br>1 = last<br>2 = current",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Services.PeriodType"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the visit usage information for the member."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "MemberVisit"
        ],
        "summary": "Records a new visit for the authenticated member.",
        "description": "This endpoint can handle visits triggered by geofence breaks or beacon triggers.\r\nThe visit data will be processed and stored for the authenticated member.",
        "requestBody": {
          "description": "The event visit data including location, timestamp, and visit details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.PostedEventVisit"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.PostedEventVisit"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.PostedEventVisit"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.PostedEventVisit"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the event visit response after successful processing.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.EventVisitResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the request data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/MemberVisit/LastVisit": {
      "get": {
        "tags": [
          "MemberVisit"
        ],
        "summary": "Retrieves the last visit date and time in UTC for the authenticated member.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the last visit date and time in UTC.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.LastVisitModelV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Menu": {
      "get": {
        "tags": [
          "User Interface"
        ],
        "summary": "Retrieves personalized menu data for the authenticated member.",
        "description": "This method uses the authenticated member's ID to filter and personalize menu content.\r\nThe menu data is returned with camelCase property names and null values are ignored.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting the menu schema data."
          },
          "200": {
            "description": "Returns the menu data for the authenticated member."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/MobileSetup/update": {
      "post": {
        "tags": [
          "Mobile Setup"
        ],
        "summary": "Updates the mobile setup configuration for the authenticated member.",
        "description": "This endpoint updates various mobile app configuration settings including:\r\n- Completion timestamp\r\n- Gym visit type preferences\r\n- EULA acceptance status\r\n- Timezone offset\r\n- Setup completion status",
        "requestBody": {
          "description": "The mobile setup data including timestamp, gym visit preferences, EULA acceptance, and timezone\r\noffset.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MobileSetupModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MobileSetupModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MobileSetupModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MobileSetupModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "The mobile setup data was updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the model is invalid or contains validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/MobileSetup": {
      "get": {
        "tags": [
          "Mobile Setup"
        ],
        "summary": "Retrieves the mobile setup configuration for the authenticated member.",
        "description": "This endpoint returns configuration data saved by the member including:\r\n- EULA acceptance status\r\n- Tutorial completion status\r\n- List of available screens for the client\r\n- Other setup-related preferences",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the app setup response object with configuration details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.AppSetupResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the request is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/movr/addActivity": {
      "post": {
        "tags": [
          "movr"
        ],
        "summary": "Records a new Movr activity session for the authenticated member.",
        "description": "This endpoint records Movr fitness activity sessions. The activity will be automatically\r\nmarked as approved and include metadata about the number of sessions performed.",
        "requestBody": {
          "description": "The Movr activity request containing session details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MovrActivityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MovrActivityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MovrActivityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MovrActivityRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error adding the Movr activity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns confirmation that the activity was added to the user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ResponseHandling.ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the request data is invalid or contains validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/movr/userRegistration": {
      "get": {
        "tags": [
          "movr"
        ],
        "summary": "Retrieves the Movr user registration profile for the authenticated member.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error retrieving the Movr user registration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the Movr user profile for the authenticated member.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.MovrUserProfileResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "movr"
        ],
        "summary": "Creates a new Movr user registration profile for the authenticated member.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error creating the Movr user registration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the newly created Movr user profile.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.MovrUserProfileResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/MyActivities": {
      "get": {
        "tags": [
          "MyActivities"
        ],
        "summary": "Retrieves member activities for a specified month and year.",
        "description": "This endpoint retrieves member activities and optionally includes fitness service synchronization\r\ndata if the EnableFitnessServiceRefresh configuration is enabled.",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting activities data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the member activities for the specified month and year.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.MyActivities.MyActivitiesViewModel"
                }
              }
            }
          },
          "400": {
            "description": "If the request parameters are invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/MyActivities/today": {
      "get": {
        "tags": [
          "MyActivities"
        ],
        "summary": "Retrieves today's activities for the authenticated member.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns today's activities for the member.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.MyActivities.MyActivitiesViewModel"
                }
              }
            }
          },
          "400": {
            "description": "If there was a problem getting today's activities data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/MyActivities/GetByActivityType": {
      "get": {
        "tags": [
          "MyActivities"
        ],
        "summary": "Retrieves member activities filtered by specific activity type.",
        "parameters": [
          {
            "name": "Month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ActivityType",
            "in": "query",
            "description": "<br>1 = Gym<br>2 = Walking<br>3 = HomeActivity<br>4 = SpotActivity<br>5 = OpenFitActivity<br>6 = SelfReport<br>7 = NEOUActivity<br>8 = WorkoutsActivity<br>9 = MovrActivity<br>10 = LifeTimeDigitalActivity<br>11 = WellnessActivity<br>12 = MyCarePathActivity",
            "schema": {
              "$ref": "#/components/schemas/Advanta.Domain.MemberActivities.Domain.Models.Activities.ActivityType"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting activities by activity type.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns activities filtered by the specified activity type."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/my-care-path/access": {
      "get": {
        "tags": [
          "MyCarePath"
        ],
        "summary": "Retrieves member access information for the care path system.",
        "parameters": [
          {
            "name": "redirect",
            "in": "query",
            "description": "Optional redirect URL parameter for post-access navigation.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting member access information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns member access information with success status and URL."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/my-care-path/sync-course-sessions": {
      "get": {
        "tags": [
          "MyCarePath"
        ],
        "summary": "Synchronizes member course sessions with the care path system.",
        "description": "This endpoint will create a member record if one doesn't exist, then synchronize\r\nthe member's course session activities with the care path system.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem syncing course sessions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns synchronization result with success status and message."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Notifications": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get all notifications for the member",
        "description": "Retrieves all active notifications for the authenticated member from the ActiveFit tray notification system.",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved the list of notifications for the member",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.NotificationResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request or error retrieving notifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Notifications/{notificationId}": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Soft delete an ActiveFit notification",
        "description": "All deletes are only soft deletes. Data is never actually removed from the database. Uses the \"WasRead\" column\r\nto mark notifications as deleted.",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "The ID of the notification to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully marked the notification as read/deleted"
          },
          "400": {
            "description": "Bad request, invalid notification ID, or the notification could not be deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Notifications/markAsRead/{notificationId}": {
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Mark notification as read",
        "description": "Marks the specified notification as read by inserting a record into the ReadNotifications table. This does not\r\ndelete the notification but tracks that the user has seen it.",
        "parameters": [
          {
            "name": "notificationId",
            "in": "path",
            "description": "The ID of the notification to be marked as read",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully marked the notification as read"
          },
          "400": {
            "description": "Bad request, invalid notification ID, or the notification could not be inserted into\r\nReadNotifications table",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Notification not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/PaymentsHistory": {
      "get": {
        "tags": [
          "PaymentsHistory"
        ],
        "summary": "Retrieves the complete payment history for the authenticated member.",
        "description": "This endpoint may temporarily return a 500 error during daily system maintenance\r\n(typically around midnight) when the member management system is being refreshed.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If the service is temporarily unavailable or an unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the complete payment history for the member.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.PaymentBills"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/PaymentsHistory/{billId}": {
      "get": {
        "tags": [
          "PaymentsHistory"
        ],
        "summary": "Retrieves payment history for a specific bill ID for the authenticated member.",
        "parameters": [
          {
            "name": "billId",
            "in": "path",
            "description": "The specific bill ID to retrieve payment information for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If an unexpected error occurred retrieving payment history.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns payment history for the specified bill ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.PaymentBills"
                }
              }
            }
          },
          "400": {
            "description": "If the model state is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Profile": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Get the member's profile information",
        "description": "Retrieves the complete profile information for the authenticated member including personal details, contact\r\ninformation, and preferences",
        "responses": {
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved the member's profile",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.MemberProfileViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Profile not found or there was an error retrieving the profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "Profile"
        ],
        "summary": "Update the member's profile information",
        "description": "Updates the authenticated member's profile with the provided information. All fields in the request will\r\noverwrite existing profile data.",
        "requestBody": {
          "description": "The profile update request containing the member's updated information",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberProfileRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberProfileRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberProfileRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberProfileRequest"
              }
            }
          }
        },
        "responses": {
          "500": {
            "description": "Internal server error during profile update",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully updated the member's profile and returns the updated profile data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.MemberProfileViewModel"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data or validation errors",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Profile/search": {
      "get": {
        "tags": [
          "Profile"
        ],
        "summary": "Type-ahead search for other members by name.",
        "parameters": [
          {
            "name": "searchTerm",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "maxResults",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.SearchProfilesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Programs": {
      "get": {
        "tags": [
          "Programs and Features"
        ],
        "summary": "Retrieves the programs and features available to the authenticated member.",
        "description": "The mobileProfile header should contain a Base64-encoded JSON object with device and app information.\r\nIf provided, this information will be registered and used to determine feature availability.",
        "parameters": [
          {
            "name": "mobileProfile",
            "in": "header",
            "description": "Base64-encoded JSON structure representing the device and app information.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error getting programs or validating mobile profile data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the programs and features available to the member.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.ProgramsResponse"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Programs/Bulk": {
      "put": {
        "tags": [
          "Programs and Features"
        ],
        "summary": "Performs bulk updates of the geolocation provider type for the service location feature across multiple members.",
        "description": "This endpoint requires special authorization and is typically used for administrative purposes\r\nto update geolocation provider settings for multiple members simultaneously.",
        "requestBody": {
          "description": "The bulk update request containing member IDs, provider type, and enabled status.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberFulfillmentBulkUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberFulfillmentBulkUpdateRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberFulfillmentBulkUpdateRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MemberFulfillmentBulkUpdateRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated or authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error during the bulk update process.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the geolocation provider type has been updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the request model is invalid or contains validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/SelfReport/TestDateTime": {
      "post": {
        "tags": [
          "SelfReport"
        ],
        "summary": "Tests datetime conversion with timezone handling for development purposes.",
        "parameters": [
          {
            "name": "timeStamp",
            "in": "query",
            "description": "Unix timestamp to convert.",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "timeZoneOffset",
            "in": "query",
            "description": "Timezone identifier (defaults to America/New_York).",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the converted local datetime."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/SelfReport": {
      "get": {
        "tags": [
          "SelfReport"
        ],
        "summary": "Retrieves self-report calendar information for the authenticated member.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the self-report calendar information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.SelfReportResponseV2"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "delete": {
        "tags": [
          "SelfReport"
        ],
        "summary": "Deletes a self-reported visit entry using request body data.",
        "description": "This endpoint is obsolete. Please use the DELETE endpoint with date in the route instead.\r\nThe selfReportDate does not need time value, just needs to parse as DateTime.",
        "requestBody": {
          "description": "The delete request containing the self-report date.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.DeleteSelfReportModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.DeleteSelfReportModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.DeleteSelfReportModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.DeleteSelfReportModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the self-report was removed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the request model is invalid or the self-report could not be removed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "deprecated": true,
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "SelfReport"
        ],
        "summary": "Moves a self-reported activity from one date to another.",
        "parameters": [
          {
            "name": "selfReportFromDate",
            "in": "query",
            "description": "The initial date to move the activity from.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "selfReportToDate",
            "in": "query",
            "description": "The destination date to move the activity to.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the self-reported date was moved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the self-reported activity could not be moved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "post": {
        "tags": [
          "SelfReport"
        ],
        "summary": "Submits a new self-reported visit entry for the authenticated member.",
        "description": "This endpoint checks if the member's account supports self-reporting based on client entitlements.\r\nOnly members with appropriate program entitlements can successfully submit self-reports.",
        "requestBody": {
          "description": "The self-report data including timestamp, location, and visit details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SelfReportModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SelfReportModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SelfReportModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SelfReportModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the self-report submission response with status and details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.SelfReportPOSTResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the request model is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/SelfReport/{selfReportDate}": {
      "delete": {
        "tags": [
          "SelfReport"
        ],
        "summary": "Deletes a self-reported visit entry for a specific date.",
        "description": "The selfReportDate parameter does not need time value, just needs to parse as DateTime.",
        "parameters": [
          {
            "name": "selfReportDate",
            "in": "path",
            "description": "Date value (e.g., 01-19-2018 or 2018-01-19).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the self-report was removed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "If the self-report could not be removed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/SpotIt/getSpotsConfigurationData": {
      "get": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Retrieves the spots configuration data used for evaluating spots based on situations and symptoms.",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the spots configuration data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Spot"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/SpotIt/getdata": {
      "get": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Retrieves the initial Spot-It configuration data.",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the default Spot-It configuration data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItDefaultDataResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/SpotIt/evaluateSpots": {
      "post": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Evaluates spots based on provided situations and symptoms without granting activity to a member.",
        "description": "This endpoint is for evaluation purposes only and does not grant an activity to a member.\r\nUse this to test spot calculations before actual submission.",
        "requestBody": {
          "description": "The spot request containing situations and symptoms for evaluation.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns a list of spots with their weights in weighted order."
          },
          "400": {
            "description": "If the request data is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/SpotIt/generatespots": {
      "post": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Generates spots for the authenticated member based on submitted situations and symptoms.",
        "requestBody": {
          "description": "The spot calculation model containing situations and symptoms data.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the generated spots and a request ID that is saved for later submission.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateResult"
                }
              }
            }
          },
          "400": {
            "description": "If the request model is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/SpotIt/generatefakespot": {
      "post": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Generates fake spots for testing purposes using predefined test data.",
        "description": "This endpoint is for testing purposes and generates fake spot data using predefined scenarios.",
        "requestBody": {
          "description": "The spot calculation model (will be overridden with fake data).",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the generated fake spots and a request ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotItCalculateResult"
                }
              }
            }
          },
          "400": {
            "description": "If the request model is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/SpotIt/retrieveSpot": {
      "get": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Retrieves a previously generated spot calculation by request ID.",
        "parameters": [
          {
            "name": "spotsRequestId",
            "in": "query",
            "description": "The request ID of the spot calculation to retrieve.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the spot calculation model."
          },
          "404": {
            "description": "If no spot calculation is found with the specified request ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/SpotIt/getAll": {
      "get": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Retrieves all stored Spot-It calculation data for debugging purposes.",
        "description": "This endpoint is primarily for debugging and administrative purposes.",
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns all stored Spot-It calculation data."
          }
        }
      }
    },
    "/api/v2/SpotIt/RemoveExpired": {
      "delete": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Removes expired Spot-It calculation data older than the specified number of days.",
        "parameters": [
          {
            "name": "daysSinceSpot",
            "in": "query",
            "description": "Number of days after which spot data is considered expired (default: 2).",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 2
            }
          }
        ],
        "responses": {
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns all remaining spot data after removing expired entries."
          }
        }
      }
    },
    "/api/v2/SpotIt/submit": {
      "put": {
        "tags": [
          "Spot-It"
        ],
        "summary": "Submits completed spots and grants a Spot-It activity for the authenticated member.",
        "description": "This endpoint finalizes the Spot-It process by recording the member's completion and awarding the activity.\r\nThe spots request ID must correspond to a previously generated spot calculation.",
        "requestBody": {
          "description": "The submission request containing spots request ID, endorsement, and feedback.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SubmitSpotsRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SubmitSpotsRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SubmitSpotsRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SubmitSpotsRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error adding the spot activity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success response when the spot was recorded and activity was awarded."
          },
          "400": {
            "description": "If the request model is invalid or no record found with the specified request ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/TodayDashboard": {
      "get": {
        "tags": [
          "TodayDashboard"
        ],
        "summary": "Get today's dashboard activities and synchronization data for the member",
        "description": "Retrieves comprehensive dashboard information for the authenticated member for a specific date, including\r\nactivities and smart walking synchronization data. The response combines activity data with synchronization status\r\nfor the requested day.",
        "parameters": [
          {
            "name": "Day",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Month",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal server error while retrieving dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Successfully retrieved dashboard activities and synchronization data",
            "content": {
              "application/json": {
                "schema": { }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid date parameters, or error retrieving dashboard data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - invalid or missing authentication token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Toolbar": {
      "get": {
        "tags": [
          "User Interface"
        ],
        "summary": "Retrieves personalized toolbar data for the authenticated member.",
        "description": "This method provides toolbar configuration data personalized for the authenticated member.\r\nThe toolbar data is returned with camelCase property names and null values are ignored.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was a problem getting the toolbar schema data."
          },
          "200": {
            "description": "Returns the toolbar data for the authenticated member."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Tutorials": {
      "get": {
        "tags": [
          "Tutorials"
        ],
        "summary": "Get the tutorial resources information for the Apps.",
        "responses": {
          "200": {
            "description": "The list of tutorial resources available",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Tutorials/update": {
      "post": {
        "tags": [
          "Tutorials"
        ],
        "summary": "Update the tutorial resources information.",
        "description": "Use the placeholder {BaseRootPath} for the URL root path",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The data was updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/UserSettings/activeFitURLs": {
      "get": {
        "tags": [
          "User Interface"
        ],
        "summary": "Retrieves ActiveFit URL configuration settings for the authenticated member.",
        "description": "This endpoint provides URL configuration settings with client ID tokenization.\r\nThe URLs are customized based on the authenticated member's client context.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the ActiveFit URL configuration settings."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/UserSettings/invite-message": {
      "get": {
        "tags": [
          "User Interface"
        ],
        "summary": "Generates a personalized member referral invite message with enrollment link.",
        "description": "This endpoint creates a personalized referral message that includes the member's unique\r\nenrollment portal link with tenant and external ID replacements.",
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error generating the invite message.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the personalized invite message with referral link."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/VerifiedClubs": {
      "get": {
        "tags": [
          "VerifiedClubs"
        ],
        "summary": "Retrieves the member's verified clubs list, optionally filtered by verification type.",
        "parameters": [
          {
            "name": "verifiedType",
            "in": "query",
            "description": "Optional filter for verification type (verified, blacklisted, etc.).<br>1 = Verified<br>2 = Blacklisted",
            "schema": {
              "$ref": "#/components/schemas/Advanta.Enums.VerifiedClubsTypes"
            },
            "x-enumNames": [
              "Verified",
              "Blacklisted"
            ]
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the list of verified clubs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.VerifiedClubLocationModel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      },
      "put": {
        "tags": [
          "VerifiedClubs"
        ],
        "summary": "Adds or updates a verified club using request body data.",
        "description": "VerifiedType should be \"verified\" if whitelisting the club, or \"blacklisted\" if blacklisting it.",
        "requestBody": {
          "description": "The club verification data containing club ID and verification type.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.NewVerifiedClubModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.NewVerifiedClubModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.NewVerifiedClubModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.NewVerifiedClubModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message and updated verified clubs list."
          },
          "400": {
            "description": "If the request model is invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/VerifiedClubs/{verifiedType}": {
      "get": {
        "tags": [
          "VerifiedClubs"
        ],
        "summary": "Retrieves the member's verified clubs list filtered by a specific verification type.",
        "parameters": [
          {
            "name": "verifiedType",
            "in": "path",
            "description": "The verification type to filter by (verified, blacklisted, etc.).<br>1 = Verified<br>2 = Blacklisted",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Advanta.Enums.VerifiedClubsTypes"
            },
            "x-enumNames": [
              "Verified",
              "Blacklisted"
            ]
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the list of verified clubs for the specified type.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.VerifiedClubLocationModel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/VerifiedClubs/{clubId}": {
      "delete": {
        "tags": [
          "VerifiedClubs"
        ],
        "summary": "Removes a club from the member's verified clubs list.",
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "description": "The club ID to remove from the verified clubs list.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message and updated verified clubs list."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/VerifiedClubs/{clubId}/{verifiedType}": {
      "put": {
        "tags": [
          "VerifiedClubs"
        ],
        "summary": "Adds or updates a verified club using route parameters.",
        "description": "VerifiedType should be \"verified\" if whitelisting the club, or \"blacklisted\" if blacklisting it.",
        "parameters": [
          {
            "name": "clubId",
            "in": "path",
            "description": "The club ID to add or update.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "verifiedType",
            "in": "path",
            "description": "The verification type (verified, blacklisted, etc.).<br>1 = Verified<br>2 = Blacklisted",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Advanta.Enums.VerifiedClubsTypes"
            },
            "x-enumNames": [
              "Verified",
              "Blacklisted"
            ]
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message and updated verified clubs list."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/Version": {
      "get": {
        "tags": [
          "Application Settings"
        ],
        "summary": "Get the version information for the Apps.",
        "responses": {
          "200": {
            "description": "The data feed indicating the versions of the app for each environment",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/v2/Version/update": {
      "post": {
        "tags": [
          "Application Settings"
        ],
        "summary": "Update the version information",
        "requestBody": {
          "description": "",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The data was updated successfully",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "boolean"
                }
              },
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              },
              "text/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Authentication token is missing, invalid, or expired"
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/VirtualFitness/addActivity": {
      "post": {
        "tags": [
          "VirtualFitness"
        ],
        "summary": "Records a new virtual fitness activity for a member from a third-party provider.",
        "description": "This endpoint processes virtual fitness activities from third-party providers and records them\r\nas member activities with appropriate metadata including type, description, and duration.",
        "requestBody": {
          "description": "The activity payload containing member ID, program details, duration, and metadata.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.TPPS.Models.ActivityPayloadModel"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.TPPS.Models.ActivityPayloadModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.TPPS.Models.ActivityPayloadModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.TPPS.Models.ActivityPayloadModel"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated or authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error adding the activity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the activity was added successfully."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    },
    "/api/v2/VirtualFitness/{providerId}/SignUp": {
      "get": {
        "tags": [
          "VirtualFitness"
        ],
        "summary": "Initiates the sign-up process for a virtual fitness provider.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the virtual fitness provider to sign up with.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error during sign-up.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the sign-up information for the specified provider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.TPPS.Models.SignUp"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/VirtualFitness/{providerId}/User": {
      "post": {
        "tags": [
          "VirtualFitness"
        ],
        "summary": "Updates the user connection status for a virtual fitness provider.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the virtual fitness provider.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error updating user configuration.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the user configuration was updated."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/VirtualFitness/{providerId}/Status": {
      "get": {
        "tags": [
          "VirtualFitness"
        ],
        "summary": "Retrieves the connection status for a virtual fitness provider.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the virtual fitness provider to check status for.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error retrieving status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns the status information for the specified provider.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.TPPS.Models.Status"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/VirtualFitness/{providerId}/SignOut": {
      "delete": {
        "tags": [
          "VirtualFitness"
        ],
        "summary": "Signs out the member from a virtual fitness provider.",
        "parameters": [
          {
            "name": "providerId",
            "in": "path",
            "description": "The ID of the virtual fitness provider to sign out from.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "401": {
            "description": "If the user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an internal server error during sign-out.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the member was signed out successfully."
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "Bearer": [ ]
          }
        ]
      }
    },
    "/api/v2/WellnessActivities/visit": {
      "post": {
        "tags": [
          "WellnessActivities"
        ],
        "summary": "Adds a wellness activity to the member activities calendar.",
        "description": "This endpoint prevents duplicate wellness activities for the same day. If a wellness activity\r\nalready exists for today, it will return a success response with an appropriate message\r\ninstead of adding a duplicate entry.",
        "requestBody": {
          "description": "The wellness activity request containing member ID and activity details.",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.WellnessActivityRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.WellnessActivityRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.WellnessActivityRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.WellnessActivityRequest"
              }
            }
          }
        },
        "responses": {
          "401": {
            "description": "If the user is not authenticated or authorized.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "500": {
            "description": "If there was an error adding the wellness activity.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ErrorHandling.ApiError"
                }
              }
            }
          },
          "200": {
            "description": "Returns success message when the activity was added, or notification if activity already exists\r\nfor today.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Advanta.AspNetCore.Api.ResponseHandling.ApiResponse"
                }
              }
            }
          },
          "400": {
            "description": "If the request data is invalid or contains validation errors.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Insufficient permissions to access this resource"
          }
        },
        "security": [
          {
            "oauth2": [
              "api1"
            ]
          },
          {
            "ApiKey": [ ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Advanta.AspNetCore.Api.ErrorHandling.ApiError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "isError": {
            "type": "boolean"
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "data": {
            "nullable": true
          },
          "errors": {
            "type": "array",
            "items": { },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.AspNetCore.Api.ResponseHandling.ApiResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.AspNetCore.ApiSecurity.Models.SignInAccount": {
        "required": [
          "password",
          "userID"
        ],
        "type": "object",
        "properties": {
          "userID": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.AspNetCore.ApiSecurity.Models.TokenResponse": {
        "required": [
          "access_token",
          "refresh_token",
          "token_type"
        ],
        "type": "object",
        "properties": {
          "token_type": {
            "type": "string",
            "nullable": true
          },
          "access_token": {
            "type": "string",
            "nullable": true
          },
          "expires_in": {
            "type": "integer",
            "format": "int32"
          },
          "refresh_token": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Domain.MemberActivities.Domain.Models.Activities.ActivityType": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12
        ],
        "type": "integer",
        "description": "<br>1 = Gym<br>2 = Walking<br>3 = HomeActivity<br>4 = SpotActivity<br>5 = OpenFitActivity<br>6 = SelfReport<br>7 = NEOUActivity<br>8 = WorkoutsActivity<br>9 = MovrActivity<br>10 = LifeTimeDigitalActivity<br>11 = WellnessActivity<br>12 = MyCarePathActivity",
        "format": "int32",
        "x-enumNames": [
          "Gym",
          "Walking",
          "HomeActivity",
          "SpotActivity",
          "OpenFitActivity",
          "SelfReport",
          "NEOUActivity",
          "WorkoutsActivity",
          "MovrActivity",
          "LifeTimeDigitalActivity",
          "WellnessActivity",
          "MyCarePathActivity"
        ]
      },
      "Advanta.Enums.ActiveFitNotificationTypes": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "<br>1 = ActiveFitTray<br>2 = ActiveFitPush",
        "format": "int32",
        "x-enumNames": [
          "ActiveFitTray",
          "ActiveFitPush"
        ]
      },
      "Advanta.Enums.CheckInSessionStateTypes": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<br>1 = NotStarted<br>2 = InProgress<br>3 = CheckedOut<br>4 = Expired",
        "format": "int32",
        "x-enumNames": [
          "NotStarted",
          "InProgress",
          "CheckedOut",
          "Expired"
        ]
      },
      "Advanta.Enums.GeolocationProviderTypes": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "<br>1 = ProximiIO<br>2 = TransistorSoft",
        "format": "int32",
        "x-enumNames": [
          "ProximiIO",
          "TransistorSoft"
        ]
      },
      "Advanta.Enums.GymVisitTypes": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "<br>1 = Automatic<br>2 = Manual",
        "format": "int32",
        "x-enumNames": [
          "Automatic",
          "Manual"
        ]
      },
      "Advanta.Enums.MemberActivityStatuses": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "description": "<br>1 = Pending<br>2 = Approved<br>3 = Denied<br>4 = Saved<br>5 = Used<br>6 = ApprovedNeverUsed",
        "format": "int32",
        "x-enumNames": [
          "Pending",
          "Approved",
          "Denied",
          "Saved",
          "Used",
          "ApprovedNeverUsed"
        ]
      },
      "Advanta.Enums.Programs": {
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11
        ],
        "type": "integer",
        "description": "<br>1 = SmartWalk<br>2 = GymVisits<br>3 = SpotIt<br>4 = FitAtHome<br>5 = OpenFit<br>6 = NEOU<br>7 = Workouts<br>8 = Movr<br>9 = LifeTimeDigital<br>10 = MyCarePath<br>11 = WellnessJourney",
        "format": "int32",
        "x-enumNames": [
          "SmartWalk",
          "GymVisits",
          "SpotIt",
          "FitAtHome",
          "OpenFit",
          "NEOU",
          "Workouts",
          "Movr",
          "LifeTimeDigital",
          "MyCarePath",
          "WellnessJourney"
        ]
      },
      "Advanta.Enums.VerifiedClubsTypes": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "<br>1 = Verified<br>2 = Blacklisted",
        "format": "int32",
        "x-enumNames": [
          "Verified",
          "Blacklisted"
        ]
      },
      "Advanta.Enums.VisitVerificationStatuses": {
        "enum": [
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "description": "<br>1 = AwaitingVerification<br>2 = VerificationRejected<br>3 = VerificationAccepted<br>4 = VerificationNotRequired",
        "format": "int32",
        "x-enumNames": [
          "AwaitingVerification",
          "VerificationRejected",
          "VerificationAccepted",
          "VerificationNotRequired"
        ]
      },
      "Advanta.Mobile.Domain.Models.AddressViewModel": {
        "type": "object",
        "properties": {
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Features.IAppFeatures": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "activated": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.MemberProfileViewModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.RequestBase"
          },
          {
            "type": "object",
            "properties": {
              "firstName": {
                "type": "string",
                "nullable": true
              },
              "middleName": {
                "type": "string",
                "nullable": true
              },
              "lastName": {
                "type": "string",
                "nullable": true
              },
              "address": {
                "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.AddressViewModel"
              },
              "dob": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "email": {
                "type": "string",
                "nullable": true
              },
              "gender": {
                "type": "string",
                "nullable": true
              },
              "dayPhone": {
                "type": "string",
                "nullable": true
              },
              "cellPhone": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.MyActivities.Abstractions.IActivityDataVM": {
        "type": "object",
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.MyActivities.Abstractions.IEnrolledActivity": {
        "type": "object",
        "properties": {
          "activityType": {
            "$ref": "#/components/schemas/Advanta.Domain.MemberActivities.Domain.Models.Activities.ActivityType"
          },
          "activityName": {
            "type": "string",
            "nullable": true
          },
          "activityIconUrl": {
            "type": "string",
            "nullable": true
          },
          "activityData": {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.MyActivities.Abstractions.IActivityDataVM"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.MyActivities.DailyActivity": {
        "type": "object",
        "properties": {
          "day": {
            "type": "string",
            "nullable": true
          },
          "goalStatus": {
            "type": "string",
            "nullable": true
          },
          "showMessage": {
            "type": "boolean"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.MyActivities.Abstractions.IEnrolledActivity"
            },
            "nullable": true
          },
          "displaySyncButton": {
            "type": "boolean"
          },
          "lastSync": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.MyActivities.MyActivitiesViewModel": {
        "type": "object",
        "properties": {
          "month": {
            "type": "string",
            "nullable": true
          },
          "year": {
            "type": "string",
            "nullable": true
          },
          "visitGoal": {
            "type": "integer",
            "format": "int32"
          },
          "incentiveAmount": {
            "type": "number",
            "format": "double"
          },
          "acceptedVisits": {
            "type": "integer",
            "format": "int32"
          },
          "pendingVisits": {
            "type": "integer",
            "format": "int32"
          },
          "rejectedVisits": {
            "type": "integer",
            "format": "int32"
          },
          "dailyActivities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.MyActivities.DailyActivity"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.ProfileSearchResult": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "isEnrolled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.RequestBase": {
        "required": [
          "memberID"
        ],
        "type": "object",
        "properties": {
          "messageID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.AppSetupResponse": {
        "type": "object",
        "properties": {
          "setupFinished": {
            "type": "boolean"
          },
          "isEulaAccepted": {
            "type": "boolean"
          },
          "setupScreens": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.SetupScreens"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.BeaconInfo": {
        "type": "object",
        "properties": {
          "beaconFactoryId": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "uuid": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "major": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "minor": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.CheckIn.CheckedOutSessionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.CheckIn.InProgressSessionResponse"
          },
          {
            "type": "object",
            "properties": {
              "checkOutDateTime": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "visitTriggered": {
                "type": "boolean"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.CheckIn.CheckinEventResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.CheckIn.OpenSessionResponse"
          },
          {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "nullable": true
              },
              "distanceToClub": {
                "type": "number",
                "format": "double"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.CheckIn.InProgressSessionResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.CheckIn.CheckinEventResponse"
          },
          {
            "type": "object",
            "properties": {
              "lastUpdatedDateTime": {
                "type": "string",
                "format": "date-time"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.CheckIn.OpenSessionResponse": {
        "type": "object",
        "properties": {
          "trackingId": {
            "type": "integer",
            "format": "int64"
          },
          "sessionState": {
            "$ref": "#/components/schemas/Advanta.Enums.CheckInSessionStateTypes"
          },
          "checkInDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "verified": {
            "type": "boolean"
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "locationName": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.ClubLocationModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "string",
            "nullable": true
          },
          "globalId": {
            "type": "string",
            "format": "uuid"
          },
          "proximiPlaceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "proximiGeofenceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "geofenceRadius": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "geoCoord": {
            "$ref": "#/components/schemas/AdvantaConnect.Domain.Services.UsageUploading.GeoCoordinate"
          },
          "beacons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.BeaconInfo"
            },
            "nullable": true
          },
          "dwellTime": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.EventVisitResponse": {
        "type": "object",
        "properties": {
          "messageID": {
            "type": "string",
            "nullable": true
          },
          "memberID": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "boolean"
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "currentVisitCount": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.HomeActivityResponse": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int64"
          },
          "status": {
            "type": "boolean"
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "currentVisitCount": {
            "type": "integer",
            "format": "int32"
          },
          "homeActivityMediaId": {
            "type": "integer",
            "format": "int64"
          },
          "visitStatisticsId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.LastVisitModelV2": {
        "type": "object",
        "properties": {
          "dateTimeUTC": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.MovrUserProfileResponse": {
        "type": "object",
        "properties": {
          "externalId": {
            "type": "string",
            "nullable": true
          },
          "registrationDateTimeUtc": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.PaymentBills": {
        "type": "object",
        "properties": {
          "bills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.PaymentResponse"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.PaymentResponse": {
        "type": "object",
        "properties": {
          "dateIssued": {
            "type": "string",
            "nullable": true
          },
          "billID": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          },
          "memberCredits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.PaymentResponse.PaymentMemberCredits"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.PaymentResponse.PaymentMemberCredits": {
        "type": "object",
        "properties": {
          "memberCreditID": {
            "type": "integer",
            "format": "int32"
          },
          "creditPeriod": {
            "type": "string",
            "nullable": true
          },
          "visits": {
            "type": "integer",
            "format": "int32"
          },
          "unitsEarned": {
            "type": "integer",
            "format": "int32"
          },
          "issuedBy": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.SelfReportPOSTResponse": {
        "type": "object",
        "properties": {
          "messageID": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "boolean"
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.SelfReportResponseV2": {
        "type": "object",
        "properties": {
          "locations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.VerifiedClubLocationModel"
            },
            "nullable": true
          },
          "selfReportMonths": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.SelfReportResponseV2.SelfReportMonth"
            },
            "nullable": true
          },
          "statusMessage": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.SelfReportResponseV2.MonthDetails": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "locationId": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.SelfReportResponseV2.SelfReportMonth": {
        "type": "object",
        "properties": {
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "visits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.SelfReportResponseV2.MonthDetails"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.SetupScreens": {
        "type": "object",
        "properties": {
          "screenKey": {
            "type": "string",
            "nullable": true
          },
          "skip": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.Responses.VerifiedClubLocationModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Responses.ClubLocationModel"
          },
          {
            "type": "object",
            "properties": {
              "isPrimary": {
                "type": "boolean"
              },
              "verifiedClubType": {
                "$ref": "#/components/schemas/Advanta.Enums.VerifiedClubsTypes"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.SearchProfilesResponse": {
        "type": "object",
        "properties": {
          "profiles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.ProfileSearchResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.SelfReportRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.RequestBase"
          },
          {
            "type": "object",
            "properties": {
              "month": {
                "type": "integer",
                "format": "int32"
              },
              "year": {
                "type": "integer",
                "format": "int32"
              },
              "day": {
                "type": "integer",
                "format": "int32"
              },
              "locationId": {
                "type": "string",
                "nullable": true
              },
              "time": {
                "type": "string",
                "nullable": true
              },
              "timeSpent": {
                "type": "integer",
                "format": "int32"
              },
              "atFacility": {
                "type": "boolean"
              },
              "geoCoord": {
                "$ref": "#/components/schemas/AdvantaConnect.Domain.Services.UsageUploading.GeoCoordinate"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "Advanta.Mobile.Domain.Models.WellnessActivityRequest": {
        "type": "object",
        "properties": {
          "memberId": {
            "type": "integer",
            "format": "int64"
          },
          "facilityId": {
            "type": "string",
            "nullable": true
          },
          "facilityName": {
            "type": "string",
            "nullable": true
          },
          "barcodeId": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Mobile.Domain.Services.PeriodType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<br>0 = all<br>1 = last<br>2 = current",
        "format": "int32",
        "x-enumNames": [
          "all",
          "last",
          "current"
        ]
      },
      "Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel": {
        "type": "object",
        "properties": {
          "resource": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel.TutorialResource"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.Controllers.UI.Tutorial.TutorialsModel.TutorialResource": {
        "required": [
          "resourceKey",
          "resourceName",
          "resourceUri"
        ],
        "type": "object",
        "properties": {
          "resourceKey": {
            "minLength": 1,
            "type": "string"
          },
          "resourceUri": {
            "minLength": 1,
            "type": "string"
          },
          "resourceName": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Controllers.ApplicationSettingsController.AccessResponse": {
        "type": "object",
        "properties": {
          "allowed": {
            "type": "boolean"
          },
          "messageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.AddToken": {
        "required": [
          "deviceId",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "minLength": 1,
            "type": "string"
          },
          "deviceId": {
            "minLength": 1,
            "type": "string"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.CheckOutEventVisit": {
        "type": "object",
        "properties": {
          "trackingId": {
            "type": "integer",
            "format": "int64"
          },
          "timeStamp": {
            "type": "integer",
            "format": "int64"
          },
          "timeZoneOffset": {
            "type": "string",
            "nullable": true
          },
          "geoCoord": {
            "$ref": "#/components/schemas/AdvantaConnect.Domain.Services.UsageUploading.GeoCoordinate"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.CheckinEventVisit": {
        "type": "object",
        "properties": {
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "timeStamp": {
            "type": "integer",
            "format": "int64"
          },
          "timeZoneOffset": {
            "type": "string",
            "nullable": true
          },
          "geoCoord": {
            "$ref": "#/components/schemas/AdvantaConnect.Domain.Services.UsageUploading.GeoCoordinate"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.ClubMarkerData": {
        "type": "object",
        "properties": {
          "brand": {
            "type": "string",
            "nullable": true
          },
          "verifiedClubInfo": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.ClubMarkerData.VerifiedClubData"
          }
        },
        "additionalProperties": false,
        "description": "This model is for Club specific related data"
      },
      "Advanta.MobileAPI.V2.Models.ClubMarkerData.VerifiedClubData": {
        "type": "object",
        "properties": {
          "isPrimary": {
            "type": "boolean"
          },
          "verifiedClubType": {
            "$ref": "#/components/schemas/Advanta.Enums.VerifiedClubsTypes"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.Coordinate": {
        "type": "object",
        "properties": {
          "latitude": {
            "type": "number",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.DeleteSelfReportModel": {
        "required": [
          "selfReportDate"
        ],
        "type": "object",
        "properties": {
          "selfReportDate": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.Endorsement": {
        "type": "object",
        "properties": {
          "endorsementId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.MapIcon": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Point"
          },
          "origin": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Point"
          },
          "anchor": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Point"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.MapMarker": {
        "type": "object",
        "properties": {
          "markerInfo": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MarkerData"
          },
          "clubInfo": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.ClubMarkerData"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "itemId": {
            "type": "integer",
            "format": "int64"
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "zip": {
            "type": "string",
            "nullable": true
          },
          "phone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.MarkerData": {
        "type": "object",
        "properties": {
          "position": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Coordinate"
          },
          "image": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.MapIcon"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.MemberFulfillmentBulkUpdateRequest": {
        "required": [
          "enabled",
          "memberIDs",
          "providerType"
        ],
        "type": "object",
        "properties": {
          "memberIDs": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "providerType": {
            "$ref": "#/components/schemas/Advanta.Enums.GeolocationProviderTypes"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.MemberProfileRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.AddressViewModel"
          },
          "dob": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true
          },
          "dayPhone": {
            "type": "string",
            "nullable": true
          },
          "cellPhone": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.MobileSetupModel": {
        "type": "object",
        "properties": {
          "timestamp": {
            "type": "number",
            "format": "double"
          },
          "gymVisit": {
            "$ref": "#/components/schemas/Advanta.Enums.GymVisitTypes"
          },
          "eula": {
            "type": "boolean"
          },
          "timeZoneOffset": {
            "type": "string",
            "nullable": true
          },
          "isSetupFinished": {
            "type": "boolean"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.MovrActivityRequest": {
        "required": [
          "sessionsPerformed"
        ],
        "type": "object",
        "properties": {
          "sessionsPerformed": {
            "type": "integer",
            "format": "int64"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.NewVerifiedClubModel": {
        "type": "object",
        "properties": {
          "clubId": {
            "type": "integer",
            "format": "int64"
          },
          "verifiedType": {
            "$ref": "#/components/schemas/Advanta.Enums.VerifiedClubsTypes"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.NotificationResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "subject": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "sticky": {
            "type": "boolean"
          },
          "urgent": {
            "type": "boolean"
          },
          "hyperlink": {
            "type": "string",
            "nullable": true
          },
          "iconUrl": {
            "type": "string",
            "nullable": true
          },
          "notificationType": {
            "$ref": "#/components/schemas/Advanta.Enums.ActiveFitNotificationTypes"
          },
          "target": {
            "$ref": "#/components/schemas/AdvantaConnect.DomainModels.ActiveFitNotification.ActiveFitNotificationTarget"
          },
          "createDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.Point": {
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.PostedEventVisit": {
        "type": "object",
        "properties": {
          "visitType": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.PostedEventVisit.VisitTypesViewModel"
          },
          "geoCoord": {
            "$ref": "#/components/schemas/AdvantaConnect.Domain.Services.UsageUploading.GeoCoordinate"
          },
          "atFacility": {
            "type": "boolean"
          },
          "dwell": {
            "type": "integer",
            "format": "int32"
          },
          "timeStamp": {
            "type": "integer",
            "format": "int64"
          },
          "timeZoneOffset": {
            "type": "string",
            "nullable": true
          },
          "locationID": {
            "type": "integer",
            "format": "int32"
          },
          "locationType": {
            "$ref": "#/components/schemas/AdvantaConnect.Domain.Services.UsageUploading.LocationTypes"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.PostedEventVisit.VisitTypesViewModel": {
        "enum": [
          1,
          2,
          3,
          19
        ],
        "type": "integer",
        "description": "<br>1 = Geofencing<br>2 = Beacon<br>3 = MobileSelfReported<br>19 = QRCodeScan",
        "format": "int32",
        "x-enumNames": [
          "Geofencing",
          "Beacon",
          "MobileSelfReported",
          "QRCodeScan"
        ]
      },
      "Advanta.MobileAPI.V2.Models.ProgramsResponse": {
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Mobile.Domain.Models.Features.IAppFeatures"
            },
            "nullable": true
          },
          "participatingPrograms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdvantaConnect.DomainModels.ProgramEntitlements.IProgramEntitlement"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.SelfReportModel": {
        "type": "object",
        "properties": {
          "locationId": {
            "type": "integer",
            "format": "int64"
          },
          "timeStamp": {
            "type": "integer",
            "format": "int64"
          },
          "timeZoneOffset": {
            "type": "string",
            "nullable": true
          },
          "timeSpent": {
            "type": "integer",
            "format": "int32"
          },
          "atFacility": {
            "type": "boolean"
          },
          "geoCoord": {
            "$ref": "#/components/schemas/AdvantaConnect.Domain.Services.UsageUploading.GeoCoordinate"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.Situation": {
        "type": "object",
        "properties": {
          "situationId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.Spot": {
        "type": "object",
        "properties": {
          "spotId": {
            "type": "integer",
            "format": "int64"
          },
          "spotTitle": {
            "type": "string",
            "nullable": true
          },
          "spotDescription": {
            "type": "string",
            "nullable": true
          },
          "spotSituations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "spotSymptoms": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.SpotItCalculateModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "timeStampInSeconds": {
            "type": "integer",
            "format": "int64"
          },
          "timeZoneOffset": {
            "type": "string",
            "nullable": true
          },
          "spotRequest": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotRequest"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.SpotItCalculateResult": {
        "type": "object",
        "properties": {
          "spotsRequestId": {
            "type": "string",
            "nullable": true
          },
          "spotsResult": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.SpotResult"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.SpotItDefaultDataResponse": {
        "type": "object",
        "properties": {
          "situations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Situation"
            },
            "nullable": true
          },
          "symptoms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Symptom"
            },
            "nullable": true
          },
          "endorsements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Endorsement"
            },
            "nullable": true
          },
          "successes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.Success"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.SpotRequest": {
        "type": "object",
        "properties": {
          "situations": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          },
          "symptoms": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.SpotResult": {
        "type": "object",
        "properties": {
          "spotId": {
            "type": "integer",
            "format": "int64"
          },
          "spotTitle": {
            "type": "string",
            "nullable": true
          },
          "spotDescription": {
            "type": "string",
            "nullable": true
          },
          "spotUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.SubmitSpotsRequest": {
        "type": "object",
        "properties": {
          "spotsRequestId": {
            "type": "string",
            "nullable": true
          },
          "endorsementId": {
            "type": "integer",
            "format": "int64"
          },
          "successId": {
            "type": "integer",
            "format": "int64"
          },
          "memberFeedback": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.Success": {
        "type": "object",
        "properties": {
          "successId": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.Symptom": {
        "type": "object",
        "properties": {
          "symptomId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/Advanta.MobileAPI.V2.Models.TypeEnum"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileAPI.V2.Models.TypeEnum": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<br>0 = Sensation<br>1 = Thought",
        "format": "int32",
        "x-enumNames": [
          "Sensation",
          "Thought"
        ]
      },
      "Advanta.MobileApi.Controllers.UI.BannerItem": {
        "type": "object",
        "properties": {
          "itemId": {
            "type": "string",
            "nullable": true
          },
          "banner_url": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "web_link": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileApi.Controllers.UI.BannerModel": {
        "type": "object",
        "properties": {
          "bannerList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.UI.BannerItem"
            },
            "nullable": true
          },
          "rules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Segmentation.Models.DTO.Rules.SegmentationRuleModel"
            },
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileApi.Controllers.VersionModel": {
        "type": "object",
        "properties": {
          "dev": {
            "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel.DeviceVersion"
          },
          "staging": {
            "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel.DeviceVersion"
          },
          "production": {
            "$ref": "#/components/schemas/Advanta.MobileApi.Controllers.VersionModel.DeviceVersion"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.MobileApi.Controllers.VersionModel.DeviceVersion": {
        "type": "object",
        "properties": {
          "android": {
            "type": "string",
            "nullable": true
          },
          "ios": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Segmentation.Models.DTO.Rules.ActionType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<br>0 = Hide<br>1 = Show",
        "format": "int32",
        "x-enumNames": [
          "Hide",
          "Show"
        ]
      },
      "Advanta.Segmentation.Models.DTO.Rules.OperationType": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "description": "<br>0 = All<br>1 = Any",
        "format": "int32",
        "x-enumNames": [
          "All",
          "Any"
        ]
      },
      "Advanta.Segmentation.Models.DTO.Rules.SegmentationRuleModel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "refItems": {
            "uniqueItems": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "enabled": {
            "type": "boolean"
          },
          "conditions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Advanta.Segmentation.Models.DTO.Rules.SegmentationRulePredicateModel"
            },
            "nullable": true
          },
          "operation": {
            "$ref": "#/components/schemas/Advanta.Segmentation.Models.DTO.Rules.OperationType"
          },
          "action": {
            "$ref": "#/components/schemas/Advanta.Segmentation.Models.DTO.Rules.ActionType"
          },
          "segmentationTarget": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.Segmentation.Models.DTO.Rules.SegmentationRulePredicateModel": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "nullable": true
          },
          "parameterKey": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.TPPS.Models.ActivityPayloadModel": {
        "type": "object",
        "properties": {
          "eventType": {
            "$ref": "#/components/schemas/Advanta.TPPS.Models.Enums.EventTypesEnum"
          },
          "memberId": {
            "type": "integer",
            "format": "int64"
          },
          "programId": {
            "type": "integer",
            "format": "int32"
          },
          "dateTimeUTC": {
            "type": "string",
            "format": "date-time"
          },
          "resourceName": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.TPPS.Models.Enums.EventTypesEnum": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "<br>1 = Activity<br>2 = Registration",
        "format": "int32",
        "x-enumNames": [
          "Activity",
          "Registration"
        ]
      },
      "Advanta.TPPS.Models.SignUp": {
        "type": "object",
        "properties": {
          "signUpUrl": {
            "type": "string",
            "nullable": true
          },
          "redirectUrl": {
            "type": "string",
            "nullable": true
          },
          "promoCode": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "Advanta.TPPS.Models.Status": {
        "type": "object",
        "properties": {
          "statusId": {
            "type": "integer",
            "format": "int32"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "disabledDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "updatedDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "registeredDateTime": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AdvantaConnect.Clubs.Data.Models.ProximiMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "clubId": {
            "type": "integer",
            "format": "int64"
          },
          "departmentId": {
            "type": "string",
            "format": "uuid"
          },
          "departmentName": {
            "type": "string",
            "nullable": true
          },
          "floorId": {
            "type": "string",
            "format": "uuid"
          },
          "floorName": {
            "type": "string",
            "nullable": true
          },
          "placeId": {
            "type": "string",
            "format": "uuid"
          },
          "placeName": {
            "type": "string",
            "nullable": true
          },
          "geofenceId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AdvantaConnect.Data.DapperManagers.HomeActivities.HomeActivityDataModel": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AdvantaConnect.Data.DapperManagers.HomeActivities.MemberActivityHADataModel"
          },
          {
            "type": "object",
            "properties": {
              "mobileVisitStatistics": {
                "$ref": "#/components/schemas/System.Xml.Linq.XElement"
              },
              "homeActivityMediaId": {
                "type": "integer",
                "format": "int64"
              },
              "id": {
                "type": "string",
                "format": "uuid"
              },
              "fileName": {
                "type": "string",
                "nullable": true
              },
              "extension": {
                "type": "string",
                "nullable": true
              },
              "contentLength": {
                "type": "integer",
                "format": "int32"
              },
              "latitude": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "longitude": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "timeStamp": {
                "type": "integer",
                "format": "int64"
              },
              "timeZoneOffset": {
                "type": "string",
                "nullable": true
              },
              "createdDateTime": {
                "type": "string",
                "format": "date-time"
              },
              "isAIFlagged": {
                "type": "boolean",
                "nullable": true
              },
              "aiFlagReason": {
                "type": "string",
                "nullable": true
              },
              "aiConfidenceScore": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "aiProcessedDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "AdvantaConnect.Data.DapperManagers.HomeActivities.MemberActivityHADataModel": {
        "type": "object",
        "properties": {
          "memberActivityID": {
            "type": "integer",
            "format": "int64"
          },
          "memberID": {
            "type": "integer",
            "format": "int64"
          },
          "isGoalMet": {
            "type": "boolean"
          },
          "evaluatedForCredit": {
            "type": "boolean"
          },
          "activityDate": {
            "type": "string",
            "format": "date-time"
          },
          "memberActivityStatus": {
            "$ref": "#/components/schemas/Advanta.Enums.MemberActivityStatuses"
          },
          "visitStatisticsId": {
            "type": "string",
            "format": "uuid",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AdvantaConnect.Data.DapperManagers.MobileAPI.DiagnosticsData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "memberId": {
            "type": "integer",
            "format": "int64"
          },
          "data": {
            "type": "string",
            "nullable": true
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AdvantaConnect.Data.DapperManagers.MobileAPI.FireBaseToken": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "memberId": {
            "type": "integer",
            "format": "int64"
          },
          "token": {
            "type": "string",
            "nullable": true
          },
          "deviceId": {
            "type": "string",
            "nullable": true
          },
          "revoked": {
            "type": "boolean"
          },
          "createdDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedDateTime": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AdvantaConnect.Domain.Services.UsageUploading.GeoCoordinate": {
        "type": "object",
        "properties": {
          "lat": {
            "type": "number",
            "format": "double"
          },
          "lng": {
            "type": "number",
            "format": "double"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AdvantaConnect.Domain.Services.UsageUploading.LocationTypes": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "description": "<br>0 = Club<br>1 = Pharmacy<br>2 = Custom",
        "format": "int32",
        "x-enumNames": [
          "Club",
          "Pharmacy",
          "Custom"
        ]
      },
      "AdvantaConnect.DomainModels.ActiveFitNotification.ActiveFitNotificationTarget": {
        "enum": [
          1,
          2
        ],
        "type": "integer",
        "description": "<br>1 = Global<br>2 = Unique",
        "format": "int32",
        "x-enumNames": [
          "Global",
          "Unique"
        ]
      },
      "AdvantaConnect.DomainModels.ProgramEntitlements.IProgramEntitlement": {
        "type": "object",
        "properties": {
          "program": {
            "$ref": "#/components/schemas/Advanta.Enums.Programs"
          },
          "programData": {
            "$ref": "#/components/schemas/AdvantaConnect.DomainModels.ProgramEntitlements.IProgramEntitlementData"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "AdvantaConnect.DomainModels.ProgramEntitlements.IProgramEntitlementData": {
        "type": "object",
        "additionalProperties": false,
        "description": ""
      },
      "Microsoft.AspNetCore.Http.HttpValidationProblemDetails": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
          },
          {
            "type": "object",
            "properties": {
              "errors": {
                "type": "object",
                "additionalProperties": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "nullable": true
              }
            },
            "additionalProperties": { }
          }
        ],
        "description": ""
      },
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": ""
      },
      "Microsoft.AspNetCore.Mvc.ValidationProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        },
        "additionalProperties": { },
        "description": ""
      },
      "System.Xml.Linq.XAttribute": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XObject"
          },
          {
            "type": "object",
            "properties": {
              "isNamespaceDeclaration": {
                "type": "boolean",
                "readOnly": true
              },
              "name": {
                "$ref": "#/components/schemas/System.Xml.Linq.XName"
              },
              "nextAttribute": {
                "$ref": "#/components/schemas/System.Xml.Linq.XAttribute"
              },
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              },
              "previousAttribute": {
                "$ref": "#/components/schemas/System.Xml.Linq.XAttribute"
              },
              "value": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XCData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XText"
          },
          {
            "type": "object",
            "properties": {
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XComment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XNode"
          },
          {
            "type": "object",
            "properties": {
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              },
              "value": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XContainer": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XNode"
          },
          {
            "type": "object",
            "properties": {
              "firstNode": {
                "$ref": "#/components/schemas/System.Xml.Linq.XNode"
              },
              "lastNode": {
                "$ref": "#/components/schemas/System.Xml.Linq.XNode"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XDeclaration": {
        "type": "object",
        "properties": {
          "encoding": {
            "type": "string",
            "nullable": true
          },
          "standalone": {
            "type": "string",
            "nullable": true
          },
          "version": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "System.Xml.Linq.XDocument": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XContainer"
          },
          {
            "type": "object",
            "properties": {
              "declaration": {
                "$ref": "#/components/schemas/System.Xml.Linq.XDeclaration"
              },
              "documentType": {
                "$ref": "#/components/schemas/System.Xml.Linq.XDocumentType"
              },
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              },
              "root": {
                "$ref": "#/components/schemas/System.Xml.Linq.XElement"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XDocumentType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XNode"
          },
          {
            "type": "object",
            "properties": {
              "internalSubset": {
                "type": "string",
                "nullable": true
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              },
              "publicId": {
                "type": "string",
                "nullable": true
              },
              "systemId": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XElement": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XContainer"
          },
          {
            "type": "object",
            "properties": {
              "firstAttribute": {
                "$ref": "#/components/schemas/System.Xml.Linq.XAttribute"
              },
              "hasAttributes": {
                "type": "boolean",
                "readOnly": true
              },
              "hasElements": {
                "type": "boolean",
                "readOnly": true
              },
              "isEmpty": {
                "type": "boolean",
                "readOnly": true
              },
              "lastAttribute": {
                "$ref": "#/components/schemas/System.Xml.Linq.XAttribute"
              },
              "name": {
                "$ref": "#/components/schemas/System.Xml.Linq.XName"
              },
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              },
              "value": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XName": {
        "type": "object",
        "properties": {
          "localName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "namespace": {
            "$ref": "#/components/schemas/System.Xml.Linq.XNamespace"
          },
          "namespaceName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "System.Xml.Linq.XNamespace": {
        "type": "object",
        "properties": {
          "namespaceName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "System.Xml.Linq.XNode": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XObject"
          },
          {
            "type": "object",
            "properties": {
              "nextNode": {
                "$ref": "#/components/schemas/System.Xml.Linq.XNode"
              },
              "previousNode": {
                "$ref": "#/components/schemas/System.Xml.Linq.XNode"
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XObject": {
        "type": "object",
        "properties": {
          "baseUri": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "document": {
            "$ref": "#/components/schemas/System.Xml.Linq.XDocument"
          },
          "nodeType": {
            "$ref": "#/components/schemas/System.Xml.XmlNodeType"
          },
          "parent": {
            "$ref": "#/components/schemas/System.Xml.Linq.XElement"
          }
        },
        "additionalProperties": false,
        "description": ""
      },
      "System.Xml.Linq.XProcessingInstruction": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XNode"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "type": "string",
                "nullable": true
              },
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              },
              "target": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.Linq.XText": {
        "allOf": [
          {
            "$ref": "#/components/schemas/System.Xml.Linq.XNode"
          },
          {
            "type": "object",
            "properties": {
              "nodeType": {
                "$ref": "#/components/schemas/System.Xml.XmlNodeType"
              },
              "value": {
                "type": "string",
                "nullable": true
              }
            },
            "additionalProperties": false
          }
        ],
        "description": ""
      },
      "System.Xml.XmlNodeType": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17
        ],
        "type": "integer",
        "description": "",
        "format": "int32"
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "JWT Authentication header using the Bearer scheme.  Enter JWT Bearer token **_only_**",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "ApiKey": {
        "type": "apiKey",
        "description": "Methods requiring Admin level roles use an API Key",
        "name": "ApiKey",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Application Settings"
    },
    {
      "name": "Authentication"
    },
    {
      "name": "BlockedActions"
    },
    {
      "name": "Cache Utilities"
    },
    {
      "name": "Check In and Check Out"
    },
    {
      "name": "ClaimsTest"
    },
    {
      "name": "Clubs"
    },
    {
      "name": "Diagnostics"
    },
    {
      "name": "Firebase"
    },
    {
      "name": "FitAtHome"
    },
    {
      "name": "Map"
    },
    {
      "name": "MemberVisit"
    },
    {
      "name": "Mobile Setup"
    },
    {
      "name": "movr"
    },
    {
      "name": "MyActivities"
    },
    {
      "name": "MyCarePath"
    },
    {
      "name": "Notifications"
    },
    {
      "name": "PaymentsHistory"
    },
    {
      "name": "Profile"
    },
    {
      "name": "Programs and Features"
    },
    {
      "name": "SelfReport"
    },
    {
      "name": "Spot-It"
    },
    {
      "name": "TodayDashboard"
    },
    {
      "name": "Tutorials"
    },
    {
      "name": "User Interface"
    },
    {
      "name": "VerifiedClubs"
    },
    {
      "name": "VirtualFitness"
    },
    {
      "name": "WellnessActivities"
    }
  ]
}